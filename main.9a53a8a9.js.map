{"version":3,"sources":["scripts/main.js"],"names":["parseSalary","sum","slice","split","join","formatToSalary","num","toLocaleString","pushNotification","title","description","type","notification","document","createElement","classList","add","setAttribute","innerHTML","body","append","setTimeout","remove","table","querySelector","activeHeaderIndex","selectedRow","addEventListener","e","target","tagName","rows","querySelectorAll","index","cellIndex","sort","a","b","aText","children","textContent","bText","localeCompare","closest","form","newRow","inputValues","map","el","i","arr","length","value","every","preventDefault","insertAdjacentHTML","cell","input","focus","key"],"mappings":"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","file":"main.9a53a8a9.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction parseSalary(sum) {\n  return +sum.slice(1).split(',').join('');\n}\n\nfunction formatToSalary(num) {\n  return `$${num.toLocaleString('en-US')}`;\n}\n\nfunction pushNotification(title, description, type) {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.setAttribute('data-qa', 'notification');\n\n  notification.innerHTML = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  document.body.append(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 3000);\n};\n\nconst table = document.querySelector('table');\nconst body = document.querySelector('tbody');\n\nlet activeHeaderIndex = null;\nlet selectedRow = null;\n\n// Sorting by clicking on title\ntable.addEventListener('click', (e) => {\n  if (e.target.tagName !== 'TH') {\n    return;\n  }\n\n  const rows = [...document.querySelectorAll('tbody>tr')];\n  const index = e.target.cellIndex;\n\n  if (activeHeaderIndex !== index) {\n    activeHeaderIndex = index;\n\n    rows.sort((a, b) => {\n      const aText = a.children[index].textContent;\n      const bText = b.children[index].textContent;\n\n      if (index === 4) {\n        return parseSalary(aText) - parseSalary(bText);\n      }\n\n      return aText.localeCompare(bText);\n    });\n  } else {\n    activeHeaderIndex = null;\n\n    rows.sort((a, b) => {\n      const aText = a.children[index].textContent;\n      const bText = b.children[index].textContent;\n\n      if (index === 4) {\n        return parseSalary(bText) - parseSalary(aText);\n      }\n\n      return bText.localeCompare(aText);\n    });\n  }\n\n  body.append(...rows);\n});\n\n// Clicked row becomes selected\nbody.addEventListener('click', (e) => {\n  const target = e.target.closest('tr');\n\n  if (!target || selectedRow === target) {\n    return;\n  }\n\n  if (selectedRow !== target) {\n    if (selectedRow) {\n      selectedRow.classList.remove('active');\n    }\n    selectedRow = target;\n    target.classList.add('active');\n  }\n});\n\n// Adding form to the document\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nform.innerHTML = `\n  <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required></label>\n  <label>\n    Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n  </label>\n  <label>Office: \n    <select name=\"office\" data-qa=\"office\" required>\n      <option>Tokyo</option>\n      <option>Singapore</option>\n      <option>London</option>\n      <option>New York</option>\n      <option>Edinburgh</option>\n      <option>San Francisco</option>\n    </select>\n  </label>\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required></label>\n  <label>Salary: \n    <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n  </label>\n  <button type=\"submit\">Save to table</button>\n`;\n\ndocument.body.append(form);\n\nform.addEventListener('click', (e) => {\n  if (e.target.type !== 'submit') {\n    return;\n  }\n\n  const newRow = document.createElement('tr');\n\n  const inputValues = [...form.querySelectorAll('[data-qa]')]\n    .map((el, i, arr) => {\n      if (i === arr.length - 1) {\n        return (el.value.length) ? formatToSalary(+el.value) : '';\n      }\n\n      return el.value;\n    });\n\n  if (inputValues.every(el => el.length)) {\n    e.preventDefault();\n\n    if (inputValues[0].length < 4) {\n      pushNotification('ERROR', 'Too short name', 'error');\n\n      return;\n    }\n\n    if (+inputValues[3] < 18 || +inputValues[3] > 90) {\n      pushNotification('ERROR', 'Invalid age', 'error');\n\n      return;\n    }\n\n    for (let i = 0; i < inputValues.length; i++) {\n      newRow.insertAdjacentHTML('beforeend', `\n        <td>${inputValues[i]}</td>\n      `);\n    }\n\n    body.append(newRow);\n    pushNotification('SUCCESS', 'New employee added', 'success');\n  }\n});\n\n// Implement editing of table\nbody.addEventListener('dblclick', (e) => {\n  if (e.target.tagName !== 'TD') {\n    return;\n  }\n\n  const cell = e.target;\n\n  cell.innerHTML = `\n    <input type=\"text\" value=\"${cell.textContent}\" class=\"cell-input\">\n  `;\n\n  const input = cell.querySelector('input');\n\n  input.focus();\n\n  input.addEventListener('blur', () => {\n    input.remove();\n    cell.textContent = input.value;\n  });\n\n  input.addEventListener('keydown', (el) => {\n    if (el.key === 'Enter') {\n      input.remove();\n      cell.textContent = input.value;\n    }\n  });\n});\n"]}